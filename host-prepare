#!/bin/bash

# exit on first error
set -e

. /etc/simplelxc/config

# by dependencies
aptitude install -y lxc bridge-utils debootstrap iptables iproute

# if there is no cgroup mounted
if ! grep " cgroup " /proc/mounts &>/dev/null; then
	mkdir /cgroup
	mount -t cgroup cgroup /cgroup
	echo "cgroup          /cgroup         cgroup  defaults        0       0" >> /etc/fstab
fi

# if there is no bridge
if ! brctl show | grep ^$bridge_interface &>/dev/null; then
	cp /etc/network/interfaces /etc/network/interfaces.$prog_name-bak
	cat <<EOF >> /etc/network/interfaces
auto $bridge_interface
iface $bridge_interface inet static
	address $host_ip
	netmask 255.255.255.0
	bridge_ports none
	bridge_fd 9
	bridge_hello 2
	bridge_maxage 12
	bridge_stp off
EOF
	ifup -v $bridge_interface
fi

# prepare nat
if sysctl net.ipv4.ip_forward | grep '0' &>/dev/null; then
	sed -i.$prog_name-bak "/net.ipv4.ip_forward/s/.*/net.ipv4.ip_forward=1/" /etc/sysctl.conf
	sysctl -w net.ipv4.ip_forward=1
fi

if ! iptables -L -t nat | grep $network &>/dev/null; then
	out_interface=$(ip route ls | grep ^default | sed 's/.* dev \([^ ]\+\)/\1/g')
	iptables -t nat -s $network/24 -A POSTROUTING -o wlan0 -j MASQUERADE
	iptables-save > /etc/iptables.up.rules
	cat<<-EOF > /etc/network/if-pre-up.d/iptables
	#!/bin/bash
	/sbin/iptables-restore < /etc/iptables.up.rules
	EOF
fi
